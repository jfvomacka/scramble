{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ghirgas/Documents/scramble/client/src/app/routes/Signin/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { signin } from \"../../state/authSlice\";\nimport \"./index.scss\";\n\nconst Signin = () => {\n  _s();\n\n  let history = useHistory();\n  let location = useLocation();\n  let {\n    from\n  } = location.state || {\n    from: {\n      pathname: process.env.REACT_APP_DEFAULT_LOGIN_REDIRECT\n    }\n  };\n  const dispatch = useDispatch();\n  const defaultLocalState = {\n    loginId: \"\",\n    password: \"\"\n  };\n  const [localState, setLocalState] = useState(defaultLocalState);\n\n  const handleChange = e => {\n    e.preventDefault();\n    setLocalState({ ...localState,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onClickSignin = async e => {\n    try {\n      e.preventDefault();\n\n      if (localState.loginId === \"\" || localState.password === \"\") {\n        window.alert(\"Login Id or Password cannot be blank.\");\n        return;\n      }\n\n      const res = await axios.post(\"/auth/local\", {\n        login_id: localState.loginId,\n        password: localState.password\n      });\n      const res_verification = await axios.get(`/api/user/verify/${localState.loginId}`);\n      console.log(res_verification.data.verification);\n      setLocalState(defaultLocalState);\n\n      if (res_verification.data.verification) {\n        from.pathname = \"/profile\";\n      } else {\n        from.pathname = \"/verify\";\n      }\n\n      console.log(from);\n\n      if (res.status === 200) {\n        const {\n          expires,\n          user\n        } = res.data.payload;\n        dispatch(signin({\n          expires,\n          user\n        }));\n        history.replace(from);\n      }\n    } catch (error) {\n      console.error(error);\n\n      if (error.response && error.response.data) {\n        window.alert(error.response.data.message);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Signin\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner container is-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Login Id\",\n        name: \"loginId\",\n        value: localState.loginId,\n        onChange: handleChange,\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        value: localState.password,\n        onChange: handleChange,\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClickSignin,\n        className: \"button is-small\",\n        children: \"SIGN IN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signin, \"x5LMne1kLzlHJNM3jRvZi/JGE8c=\", false, function () {\n  return [useHistory, useLocation, useDispatch];\n});\n\n_c = Signin;\nexport default Signin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"sources":["/Users/ghirgas/Documents/scramble/client/src/app/routes/Signin/index.js"],"names":["React","useState","useHistory","useLocation","axios","useDispatch","signin","Signin","history","location","from","state","pathname","process","env","REACT_APP_DEFAULT_LOGIN_REDIRECT","dispatch","defaultLocalState","loginId","password","localState","setLocalState","handleChange","e","preventDefault","target","name","value","onClickSignin","window","alert","res","post","login_id","res_verification","get","console","log","data","verification","status","expires","user","payload","replace","error","response","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { signin } from \"../../state/authSlice\";\n\nimport \"./index.scss\";\n\nconst Signin = () => {\n  let history = useHistory();\n  let location = useLocation();\n  let { from } = location.state || {\n    from: { pathname: process.env.REACT_APP_DEFAULT_LOGIN_REDIRECT },\n  };\n\n  const dispatch = useDispatch();\n\n  const defaultLocalState = {\n    loginId: \"\",\n    password: \"\",\n  };\n\n  const [localState, setLocalState] = useState(defaultLocalState);\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setLocalState({ ...localState, [e.target.name]: e.target.value });\n  };\n\n  const onClickSignin = async (e) => {\n    try {\n      e.preventDefault();\n\n      if (localState.loginId === \"\" || localState.password === \"\") {\n        window.alert(\"Login Id or Password cannot be blank.\");\n        return;\n      }\n      const res = await axios.post(\"/auth/local\", {\n        login_id: localState.loginId,\n        password: localState.password,\n      });\n\n      const res_verification = await axios.get(`/api/user/verify/${localState.loginId}`);\n      console.log(res_verification.data.verification);\n\n      setLocalState(defaultLocalState);\n\n      if(res_verification.data.verification) {\n        from.pathname = \"/profile\";\n      }\n      else {\n        from.pathname = \"/verify\";\n      }\n      console.log(from);\n\n      if (res.status === 200) {\n\n        const { expires, user } = res.data.payload;\n        dispatch(signin({ expires, user }));\n        history.replace(from);\n\n      }\n    } catch (error) {\n      console.error(error);\n      if (error.response && error.response.data) {\n        window.alert(error.response.data.message);\n      }\n    }\n  };\n\n  return (\n    <div className=\"Signin\">\n      <div className=\"inner container is-fluid\">\n        <h2>Sign In</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Login Id\"\n          name=\"loginId\"\n          value={localState.loginId}\n          onChange={handleChange}\n          className=\"input\"\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          value={localState.password}\n          onChange={handleChange}\n          className=\"input\"\n        />\n        <button onClick={onClickSignin} className=\"button is-small\">SIGN IN</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Signin;\n"]},"metadata":{},"sourceType":"module"}