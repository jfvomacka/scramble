{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ghirgas/Documents/scramble/client/src/app/routes/Verify/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport \"./index.scss\";\n\nconst Verify = () => {\n  _s();\n\n  let history = useHistory();\n  let location = useLocation();\n  let {\n    from\n  } = location.state || {\n    from: {\n      pathname: process.env.REACT_APP_DEFAULT_LOGIN_REDIRECT\n    }\n  };\n  const auth = useSelector(state => state.auth);\n  const defaultLocalState = {\n    loginId: \"\",\n    verification: \"\"\n  };\n  const [localState, setLocalState] = useState(defaultLocalState);\n\n  const handleChange = e => {\n    e.preventDefault();\n    setLocalState({ ...localState,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onClickSignin = async e => {\n    try {\n      e.preventDefault();\n\n      if (localState.verification === \"\") {\n        window.alert(\"Error: enter verification code.\");\n        return;\n      }\n\n      if (isNaN(localState.verification)) {\n        window.alert(\"Error: invalid verification code.\");\n        return;\n      }\n\n      const res = await axios.post(\"/api/user/verified\", {\n        login_id: auth.user.login_id,\n        verification: localState.verification\n      });\n      setLocalState(defaultLocalState);\n\n      if (res.status === 200) {\n        from.pathname = \"/profile\";\n        history.replace(from);\n      }\n    } catch (error) {\n      console.error(error);\n\n      if (error.response && error.response.data) {\n        window.alert(error.response.data.message);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Signin\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner container is-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Verify your account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Verification code\",\n        name: \"verification\",\n        value: localState.verification,\n        onChange: handleChange,\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClickSignin,\n        className: \"button is-blue is-hollow\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Verify, \"N4VXtTaX67Ov6YFNJWaed0ziXs0=\", false, function () {\n  return [useHistory, useLocation, useSelector];\n});\n\n_c = Verify;\nexport default Verify;\n\nvar _c;\n\n$RefreshReg$(_c, \"Verify\");","map":{"version":3,"sources":["/Users/ghirgas/Documents/scramble/client/src/app/routes/Verify/index.js"],"names":["React","useState","useHistory","useLocation","axios","useSelector","Verify","history","location","from","state","pathname","process","env","REACT_APP_DEFAULT_LOGIN_REDIRECT","auth","defaultLocalState","loginId","verification","localState","setLocalState","handleChange","e","preventDefault","target","name","value","onClickSignin","window","alert","isNaN","res","post","login_id","user","status","replace","error","console","response","data","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\n\nimport \"./index.scss\";\n\nconst Verify = () => {\n  let history = useHistory();\n  let location = useLocation();\n  let { from } = location.state || {\n    from: { pathname: process.env.REACT_APP_DEFAULT_LOGIN_REDIRECT },\n  };\n\n  const auth = useSelector((state) => state.auth);\n\n  const defaultLocalState = {\n    loginId: \"\",\n    verification: \"\",\n  };\n\n  const [localState, setLocalState] = useState(defaultLocalState);\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setLocalState({ ...localState, [e.target.name]: e.target.value });\n  };\n\n  const onClickSignin = async (e) => {\n    try {\n      e.preventDefault();\n\n      if (localState.verification === \"\") {\n        window.alert(\"Error: enter verification code.\");\n        return;\n      }\n\n      if(isNaN(localState.verification)) {\n        window.alert(\"Error: invalid verification code.\");\n        return;\n      }\n\n      const res = await axios.post(\"/api/user/verified\", {\n        login_id: auth.user.login_id,\n        verification: localState.verification,\n      });\n\n      setLocalState(defaultLocalState);\n\n      if (res.status === 200) {\n        from.pathname = \"/profile\";\n        history.replace(from);\n      }\n    } catch (error) {\n      console.error(error);\n      if (error.response && error.response.data) {\n        window.alert(error.response.data.message);\n      }\n    }\n  };\n\n  return (\n    <div className=\"Signin\">\n      <div className=\"inner container is-fluid\">\n        <h2>Verify your account</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Verification code\"\n          name=\"verification\"\n          value={localState.verification}\n          onChange={handleChange}\n          className=\"input\"\n        />\n        <button onClick={onClickSignin} className=\"button is-blue is-hollow\">Sign In</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Verify;\n"]},"metadata":{},"sourceType":"module"}