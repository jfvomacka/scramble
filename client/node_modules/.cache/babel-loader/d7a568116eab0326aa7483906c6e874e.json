{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ghirgas/Documents/scramble/client/src/app/routes/Signup/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { signin } from \"../../state/authSlice\";\nimport \"./index.scss\";\n\nconst Signup = () => {\n  _s();\n\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const defaultLocalState = {\n    loginId: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\"\n  };\n  const [localState, setLocalState] = useState(defaultLocalState);\n\n  const handleChange = e => {\n    e.preventDefault();\n    setLocalState({ ...localState,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onClickSignup = async e => {\n    try {\n      e.preventDefault();\n\n      if (localState.loginId === \"\" || localState.password === \"\" || localState.firstName === \"\" || localState.lastName === \"\") {\n        window.alert(\"Error: do not leave any fields blank. It makes our matchmaking gremlins' jobs very hard.\");\n        return;\n      } // Email verification (front-end edition)\n\n\n      var emailCheck = localState.email.split(\"@\");\n\n      if (emailCheck.length !== 2) {\n        window.alert(\"Error: please enter an actual email.\");\n        return;\n      }\n\n      if (emailCheck[1] !== \"usc.edu\") {\n        window.alert(\"Error: email must be a verified usc.edu account.\");\n        return;\n      }\n\n      const res = await axios.post(\"/api/user\", {\n        login_id: localState.loginId,\n        password: localState.password,\n        first_name: localState.firstName,\n        last_name: localState.lastName,\n        email: localState.email\n      });\n      const res_verification = await axios.get(`/api/user/verify/${localState.loginId}`);\n      setLocalState(defaultLocalState);\n\n      if (res.status === 200) {\n        // If verifiedn't, send to verification page\n        if (res_verification.status === 200 && res_verification.data.verification.verified === false) {\n          const {\n            expires,\n            user\n          } = res.data.payload;\n          dispatch(signin({\n            expires,\n            user\n          }));\n          history.replace({\n            pathname: \"/verify\"\n          });\n        }\n\n        const {\n          expires,\n          user\n        } = res.data.payload;\n        dispatch(signin({\n          expires,\n          user\n        }));\n        history.replace({\n          pathname: process.env.REACT_APP_DEFAULT_LOGIN_REDIRECT\n        });\n      }\n    } catch (error) {\n      console.error(error);\n\n      if (error.response && error.response.data) {\n        window.alert(error.response.data.message);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Signup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner container is-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lemons\",\n        children: \"let's do this\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"First Name\",\n        name: \"firstName\",\n        value: localState.firstName,\n        onChange: handleChange,\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Last Name\",\n        name: \"lastName\",\n        value: localState.lastName,\n        onChange: handleChange,\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"USC Email\",\n        name: \"email\",\n        value: localState.email,\n        onChange: handleChange,\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        name: \"loginId\",\n        value: localState.loginId,\n        onChange: handleChange,\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        value: localState.password,\n        onChange: handleChange,\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClickSignup,\n        className: \"button\",\n        children: \"SIGN UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"YIjenMse7WAQXoUm53zd92slf5I=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/ghirgas/Documents/scramble/client/src/app/routes/Signup/index.js"],"names":["React","useState","useHistory","axios","useDispatch","signin","Signup","history","dispatch","defaultLocalState","loginId","password","firstName","lastName","email","localState","setLocalState","handleChange","e","preventDefault","target","name","value","onClickSignup","window","alert","emailCheck","split","length","res","post","login_id","first_name","last_name","res_verification","get","status","data","verification","verified","expires","user","payload","replace","pathname","process","env","REACT_APP_DEFAULT_LOGIN_REDIRECT","error","console","response","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { signin } from \"../../state/authSlice\";\n\nimport \"./index.scss\";\n\nconst Signup = () => {\n  let history = useHistory();\n\n  const dispatch = useDispatch();\n\n  const defaultLocalState = {\n    loginId: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\"\n  };\n\n  const [localState, setLocalState] = useState(defaultLocalState);\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setLocalState({ ...localState, [e.target.name]: e.target.value });\n  };\n\n  const onClickSignup = async (e) => {\n    try {\n      e.preventDefault();\n\n      if (localState.loginId === \"\" || localState.password === \"\" || localState.firstName === \"\" || localState.lastName === \"\") {\n        window.alert(\"Error: do not leave any fields blank. It makes our matchmaking gremlins' jobs very hard.\");\n        return;\n      }\n\n      // Email verification (front-end edition)\n      var emailCheck = localState.email.split(\"@\");\n      if(emailCheck.length !== 2) {\n        window.alert(\"Error: please enter an actual email.\");\n        return;\n      }\n      if(emailCheck[1] !== \"usc.edu\") {\n        window.alert(\"Error: email must be a verified usc.edu account.\");\n        return;\n      }\n\n      const res = await axios.post(\"/api/user\", {\n        login_id: localState.loginId,\n        password: localState.password,\n        first_name: localState.firstName,\n        last_name: localState.lastName,\n        email: localState.email\n      });\n\n      const res_verification = await axios.get(`/api/user/verify/${localState.loginId}`);\n\n      setLocalState(defaultLocalState);\n\n      if (res.status === 200) {\n\n        // If verifiedn't, send to verification page\n        if (res_verification.status === 200 && res_verification.data.verification.verified === false) {\n          const { expires, user } = res.data.payload;\n          dispatch(signin({ expires, user }));\n          history.replace({\n            pathname: \"/verify\",\n          });\n        }\n\n        const { expires, user } = res.data.payload;\n        dispatch(signin({ expires, user }));\n        history.replace({\n          pathname: process.env.REACT_APP_DEFAULT_LOGIN_REDIRECT,\n        });\n      }\n    } catch (error) {\n      console.error(error);\n      if (error.response && error.response.data) {\n        window.alert(error.response.data.message);\n      }\n    }\n  };\n\n  return (\n    <div className=\"Signup\">\n      <div className=\"inner container is-fluid\">\n        <div className=\"title\">Sign Up</div>\n        <div className=\"lemons\">let's do this</div>\n        <input\n          type=\"text\"\n          placeholder=\"First Name\"\n          name=\"firstName\"\n          value={localState.firstName}\n          onChange={handleChange}\n          className=\"input\"\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Last Name\"\n          name=\"lastName\"\n          value={localState.lastName}\n          onChange={handleChange}\n          className=\"input\"\n        />\n        <input\n          type=\"text\"\n          placeholder=\"USC Email\"\n          name=\"email\"\n          value={localState.email}\n          onChange={handleChange}\n          className=\"input\"\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          name=\"loginId\"\n          value={localState.loginId}\n          onChange={handleChange}\n          className=\"input\"\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          value={localState.password}\n          onChange={handleChange}\n          className=\"input\"\n        />\n        <button onClick={onClickSignup} className=\"button\">\n          SIGN UP\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}